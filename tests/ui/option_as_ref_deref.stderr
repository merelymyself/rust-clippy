error: called `.as_ref().map(Deref::deref)` on an Option value. This can be done more directly by calling `opt.clone().as_deref()` instead
  --> $DIR/option_as_ref_deref.rs:13:13
   |
LL |     let _ = opt.clone().as_ref().map(Deref::deref).map(str::len);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.clone().as_deref()`
   |
   = note: `-D clippy::option-as-ref-deref` implied by `-D warnings`

error: called `.as_ref().map(Deref::deref)` on an Option value. This can be done more directly by calling `opt.clone().as_deref()` instead
  --> $DIR/option_as_ref_deref.rs:16:13
   |
LL |       let _ = opt.clone()
   |  _____________^
LL | |         .as_ref().map(
LL | |             Deref::deref
LL | |         )
   | |_________^ help: try using as_deref instead: `opt.clone().as_deref()`

error: called `.as_mut().map(DerefMut::deref_mut)` on an Option value. This can be done more directly by calling `opt.as_deref_mut()` instead
  --> $DIR/option_as_ref_deref.rs:22:13
   |
LL |     let _ = opt.as_mut().map(DerefMut::deref_mut);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.as_deref_mut()`

error: called `.as_ref().map(String::as_str)` on an Option value. This can be done more directly by calling `opt.as_deref()` instead
  --> $DIR/option_as_ref_deref.rs:24:13
   |
LL |     let _ = opt.as_ref().map(String::as_str);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`

error: called `.as_ref().map(|x| x.as_str())` on an Option value. This can be done more directly by calling `opt.as_deref()` instead
  --> $DIR/option_as_ref_deref.rs:25:13
   |
LL |     let _ = opt.as_ref().map(|x| x.as_str());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`

error: called `.as_mut().map(String::as_mut_str)` on an Option value. This can be done more directly by calling `opt.as_deref_mut()` instead
  --> $DIR/option_as_ref_deref.rs:26:13
   |
LL |     let _ = opt.as_mut().map(String::as_mut_str);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.as_deref_mut()`

error: called `.as_mut().map(|x| x.as_mut_str())` on an Option value. This can be done more directly by calling `opt.as_deref_mut()` instead
  --> $DIR/option_as_ref_deref.rs:27:13
   |
LL |     let _ = opt.as_mut().map(|x| x.as_mut_str());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.as_deref_mut()`

error: called `.as_ref().map(CString::as_c_str)` on an Option value. This can be done more directly by calling `Some(CString::new(vec![]).unwrap()).as_deref()` instead
  --> $DIR/option_as_ref_deref.rs:28:13
   |
LL |     let _ = Some(CString::new(vec![]).unwrap()).as_ref().map(CString::as_c_str);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `Some(CString::new(vec![]).unwrap()).as_deref()`

error: called `.as_ref().map(OsString::as_os_str)` on an Option value. This can be done more directly by calling `Some(OsString::new()).as_deref()` instead
  --> $DIR/option_as_ref_deref.rs:29:13
   |
LL |     let _ = Some(OsString::new()).as_ref().map(OsString::as_os_str);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `Some(OsString::new()).as_deref()`

error: called `.as_ref().map(PathBuf::as_path)` on an Option value. This can be done more directly by calling `Some(PathBuf::new()).as_deref()` instead
  --> $DIR/option_as_ref_deref.rs:30:13
   |
LL |     let _ = Some(PathBuf::new()).as_ref().map(PathBuf::as_path);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `Some(PathBuf::new()).as_deref()`

thread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', clippy_lints/src/path_from_format.rs:39:41
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

error: internal compiler error: unexpected panic

note: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust-clippy/issues/new

note: Clippy version: clippy 0.1.62 (01d75b195 2022-05-13)

query stack during panic:
#0 [analysis] running analysis passes on this crate
end of query stack
error: aborting due to 10 previous errors

